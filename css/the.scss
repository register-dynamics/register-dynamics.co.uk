---
---
$MINIMUM_WINDOW: 1024px - 1px;

$BODY_SIZE: 960px;
$COLUMNS: 12;
$COLUMN_SIZE: ($BODY_SIZE / $COLUMNS) * 4/5;
$COLUMN_GAP: ($BODY_SIZE / $COLUMNS) * 1/5;
@function columns($n) {
  @return ($COLUMN_SIZE + $COLUMN_GAP) * $n - $COLUMN_GAP;
}

$HIDE_LOGO: 550px - 1px;
$HIDE_MENU: 800px; // trial and error
$COMPRESSED_HEADER: 720px - 1px;
$COMPRESSED_PADDING: ($MINIMUM_WINDOW - $BODY_SIZE) / 2;
$MARGIN_CALC: '((100% - #{$BODY_SIZE})/2)';
$RELATIVE_MARGIN_CALC: '((100vw - #{$BODY_SIZE})/2)';

$DARK_GREEN: rgb(0, 70, 30);
$LIGHT_GREEN: rgb(200, 250, 100);
$TEXT_GREEN: rgb(75, 95, 70);
$ILLUS_BLUE: rgb(180, 250, 255);
$ILLUS_ORANGE: rgb(250, 212, 100);
$ILLUS_RED: rgb(250, 130, 130);
$ILLUS_PURPLE: rgb(159, 107, 255);

$HEADLINE: 'DM Serif Display', serif;
$SUBHEADS: 'Chivo', sans-serif;
$BODYTEXT: 'Chivo', sans-serif;

@function inline-svg($svg) {
  @return url('data:image/svg+xml;utf8, #{$svg}');
}

@function expand-color($color) {
  @return 'rgb(#{red($color)}, #{green($color)}, #{blue($color)})';
}

@page {
  margin-top: 2em;
}

@mixin grid() {
  display: grid;
  grid-template-columns: repeat(12, #{$COLUMN_SIZE});
  grid-column-gap: $COLUMN_GAP;
  grid-row-gap: $COLUMN_GAP;

  @media screen and (max-width: $BODY_SIZE) {
    grid-template-columns: repeat(12, 1fr);
  }

  @media screen and (max-width: $HIDE_LOGO) {
    grid-template-columns: 100%;

    > * {
      grid-column: span 1 !important;
    }
  }
}

@function margin-calc($max) {
  @return '((#{$max} - min(100vw, #{$BODY_SIZE}))/2)';
}

@mixin negative-margin($remaining_space) {
  margin-left: calc(-1 * (#{$remaining_space}));
  margin-right: calc(-1 * (#{$remaining_space}));
}

@mixin expand-to-window($max: 100%) {
  width: $max;
  max-width: none;
  box-sizing: border-box;
  padding-left: calc(#{margin-calc($max)});
  padding-right: calc(#{margin-calc($max)});

  @media screen and (max-width: $MINIMUM_WINDOW) {
    padding-left: $COMPRESSED_PADDING;
    padding-right: $COMPRESSED_PADDING;
  }
}

@mixin expand-within($max) {
  @include expand-to-window($max);
  @include negative-margin(margin-calc($max));
  width: calc(#{$max});

  @media screen and (max-width: $MINIMUM_WINDOW) {
    @include negative-margin(#{$max} - 100%);
  }
}

@mixin window-width($max: 100vw) {
  @include negative-margin(margin-calc($max));
  width: calc(#{$max});
}

@mixin mobile-menu-button($id, $size) {
  a[href='##{$id}'] {
    display: none;
  }

  @media screen and (max-width: $HIDE_MENU) {
    &:not(:target) a[href='##{$id}'] {
      display: block;
      text-indent: 100%;
      overflow: hidden;
      width: $size;
      min-width: $size;
      min-height: $size;
      padding: 0 !important;
      margin: 0;
      align-self: stretch;
      background-size: $size 100%;
      background-image: inline-svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="141.9" height="133.7" viewBox="0 0 142 134"><style>*{stroke:#{expand-color($LIGHT_GREEN)};stroke-width:21.16;stroke-linecap:round}</style><path d="M11 11h120M11 123h120M11 67h120"/></svg>'
      );
      background-repeat: no-repeat;
    }

    &:target a[href='##{$id}'] {
      display: none;
    }
  }
}

html {
  overflow-x: hidden;
}

body {
  width: 100%;
  margin: 0;
  background: white;
  color: $TEXT_GREEN;
  font-family: $BODYTEXT;
  font-weight: normal;
  line-height: 1.2;
}

h1 {
  font-family: $HEADLINE;
  color: $DARK_GREEN;
  font-size: 64px;
  letter-spacing: -1px;
  margin-top: $COLUMN_SIZE;
}

h2, h3, h4, h5, h6 {
  font-family: $SUBHEADS;
  font-weight: bold;
  color: $DARK_GREEN;
}

a {
  color: inherit;
}

pre {
  padding: 1ch;
  border-radius: $COLUMN_GAP / 2;
  background: #eee;
  color: black;
}

code {
  font-size: 95%;
  font-family: "Lucida Console", "Courier New", monospace;
  display: inline-block;
  padding: 0 0.5ch;
  background: #eee;
  border-radius: $COLUMN_GAP / 2;
}

blockquote {
  border-left: 4px solid $DARK_GREEN;
  margin-left: 0;
  padding-left: 40px;
}

table {
  thead tr {
    background: $DARK_GREEN;
    color: white;
  }

  td, th {
    padding: 0 1ch;
  }
}

[role~='button'] {
  display: inline-block;
  padding: $COLUMN_GAP/2 $COLUMN_GAP;
  background: $DARK_GREEN;
  color: white;
  font-weight: bold;
  border-radius: $COLUMN_GAP * 2;
  text-decoration: none;
}

#menu {
  background: $DARK_GREEN;
  color: $LIGHT_GREEN;
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: $COLUMN_GAP * 2 $COLUMN_GAP;
  @include expand-to-window();
  @include mobile-menu-button('menu', $COLUMN_GAP * 1.5);

  a {
    text-decoration: none;
    font-size: 20px;
  }

  [role~='button'] {
    background: $LIGHT_GREEN;
    color: $DARK_GREEN;
  }

  > * {
    flex-grow: 0;
    margin-right: 2ch;

    &:first-child {
      margin-right: auto;
    }
  }

  @media screen and (max-width: $HIDE_MENU) {
    &:not(:target) > *:not(:first-child) {
      display: none;
    }
    &:target {
      flex-direction: column;
      align-items: start;

      > * { margin-bottom: $COLUMN_GAP; }
    }
  }

  #logo {
    width: columns(2.5);
    display: flex; // alignment fix

    img {
      width: 100%;
      height: 100%;
    }
  }
}

main {
  max-width: $BODY_SIZE;
  margin: 0 auto;
  font-size: 150%;

  @media screen and (max-width: #{960px + 2*$COLUMN_GAP}) {
    margin: auto $COLUMN_GAP;
  }

  > *:not(:first-child) {
    margin-top: 2em;
  }
}

body[data-title=''] header {
  margin-bottom: -$COLUMN_SIZE;
  margin-top: $COLUMN_SIZE;
}

header, footer, header *, footer * {
  background: $DARK_GREEN;
  color: white;

  @media screen and (max-width: $BODY_SIZE) {
    overflow: hidden;

    svg {
      margin: 0 -50%;
      min-height: 33vh;
    }
  }
}

header.report {
  @include expand-to-window();
  padding-top: $COLUMN_SIZE;
  padding: $COLUMN_SIZE calc((100% - 720px)/2);
  margin-bottom: $COLUMN_SIZE;
  position: relative;

  h1 {
    font-size: 65px;
    margin-top: 0;
  }
}

article, aside {
  margin: 0 auto;
  max-width: 720px;

  h1 {
    font-size: 65px;
    line-height: 1.1;
    margin-bottom: 0.5em;
    margin-top: $COLUMN_SIZE;
  }

  img {
    margin: 0 auto;
    max-width: 100%;
  }

  @media screen and (max-width: #{720px + 2*$COLUMN_GAP}) {
    margin: 0 $COLUMN_GAP;
  }
}

.license {
  font-style: italic;
}

#markdown-toc {
  padding: $COLUMN_GAP $COLUMN_GAP*2;
  border: 1px solid $DARK_GREEN;
}

.sharezone {
  display: flex;
  flex-direction: row;
  align-items: center;
  font-weight: bold;

  :first-child {
    margin-left: auto;
  }

  a {
    margin-left: 10px;
    border-radius: 3em;
    text-indent: 100%;
    overflow: hidden;
    width: 48px;
    height: 48px;
    background-color: $DARK_GREEN;
    background-size: 32px;
    background-repeat: no-repeat;
    background-position: 50%;

    &[href^="https://www.twitter.com/intent/tweet"] {
      background-image: url({{ "/images/Twitter_Logo.svg" | prepend: site.baseurl }});
    }

    &[href^="https://facebook.com/sharer"] {
      background-image: url({{ "/images/Facebook_Logo.png" | prepend: site.baseurl }});
    }

    &[href^="https://linkedin.com/shareArticle"] {
      background-image: url({{ "/images/LinkedIn_Logo.svg" | prepend: site.baseurl }});
    }
  }
}

.biog {
  display: grid;
  grid-template-columns: 1*$COLUMN_SIZE 5fr;
  grid-column-gap: 2*$COLUMN_GAP;
  grid-row-gap: 1em;
  margin-top: 3*$COLUMN_GAP;
  padding: 2*$COLUMN_GAP;
  background: $LIGHT_GREEN;

  * {
    margin: 0;
  }

  @media screen and (max-width: $HIDE_LOGO) {
    grid-template-columns: 100%;
  }

  img {
    width: 100%;
    border-radius: 50%;
    grid-column: 1;
    grid-row: span 4;

    @media screen and (max-width: $HIDE_LOGO) {
      width: $COLUMN_SIZE;
    }
  }

  span {
    font-weight: bold;
    font-size: 130%;
  }

  @media screen and (min-width: $HIDE_LOGO) {
    span, p {
      grid-column: 2;
    }
  }
}

.content-grid {
  display: grid;
  grid-template-columns: repeat(12, $COLUMN_SIZE);
  grid-column-gap: $COLUMN_GAP;
  grid-row-gap: 1em;
  font-size: 1rem;
  padding-left: 0;

  > * {
    position: relative;
  }

  @for $SIZE from 1 to 12 {
    &[data-cols='#{$SIZE}'] {
      > * {
        grid-column: span #{12 / $SIZE};
      }

      &[data-image-mode=cover] > li > *:not(.alternating) img:first-child {
        $ASPECT_RATIO: 11/16;
        $COLUMN_WIDTH: 12/$SIZE;
        height: $COLUMN_SIZE * $COLUMN_WIDTH * $ASPECT_RATIO;
      }
    }
  }

  &[data-coloured] > * {
    padding-left: $COLUMN_GAP;
    padding-right: $COLUMN_GAP;
    &:nth-child(4n + 1) { background-color: $ILLUS_RED; }
    &:nth-child(4n + 2) { background-color: $ILLUS_ORANGE; }
    &:nth-child(4n + 3) { background-color: $ILLUS_PURPLE; }
    &:nth-child(4n + 4) { background-color: $ILLUS_BLUE; }
    &:nth-child(4n + 3) {
      & h1, h2, h3, h4, h5, h6, * { color: white; }
      &::marker { color: white; }
    }
  }

  &[data-image-mode=icon] img {
    display: block;
    max-height: 8em;
    margin-left: auto;
    margin-right: auto;
  }

  &[data-image-mode=cover] {
    > li > *:not(.alternating) img:first-child {
      object-fit: cover;
      width: 100%;
      margin-left: 0;
      margin-right: 0;
    }

    &[data-coloured] > li > *:not(.alternating) img:first-child {
      width: calc(100% + #{$COLUMN_GAP}*2);
      margin-left: -$COLUMN_GAP;
      margin-bottom: $COLUMN_GAP / 2;
    }
  }

  @media screen and (max-width: $BODY_SIZE) {
    grid-template-columns: repeat(2, 1fr);

    > * {
      grid-column: span 1 !important;
    }
  }

  @media screen and (max-widtH: $BODY_SIZE * 0.66) {
    grid-template-columns: 100%;
  }
}

ol.content-grid {
  list-style-position: inside;

  & > li {
    padding-top: $COLUMN_GAP;

    &::marker {
      font-size: 3rem;
      font-family: $HEADLINE;
      font-weight: bold;
    }
  }
}

ul.content-grid {
  list-style: none;
}

#index .alternating:first-of-type {
  margin: #{$COLUMN_SIZE * 2} auto;
  grid-row-gap: 2em;

  > * {
    margin: 0;
  }

  h1 {
    line-height: 1.1em;
  }

  > :nth-child(3), > :nth-child(4) {
    grid-column: 6 / span 5;
  }

  .call-to-action {
    justify-content: left;
  }

  ~ h1 {
    margin: #{$COLUMN_SIZE* 2.5} auto 0;
  }

  ~ section {
    margin-top: $COLUMN_SIZE * 3/4;
    margin-bottom: $COLUMN_SIZE * 1/2;
  }
}

#index img[alt$=logo] {
  max-height: 160px;
  max-width: 100%;
}

aside.banner {
  @include expand-within(100vw);
  padding-top: $COLUMN_GAP;
  padding-bottom: $COLUMN_GAP;
  background-color: $LIGHT_GREEN;
}

.alternating, [data-image-mode=alternating] > li > * {
  @include grid();
  font-size: 1rem;

  > * {
    margin: 0;
  }

  > img {
    width: 100%;
    grid-row: 1 / span 4;
  }

  p:first-of-type {
    font-size: 1.5rem;
  }
}

.alternating, [data-image-mode=alternating] > li {
  $IMG_WIDTH: 4;

  &:nth-of-type(odd) {
    *   { grid-column: #{$IMG_WIDTH + 2} / -1; }
    img { grid-column: 1 / span #{$IMG_WIDTH}; }
  }

  &:nth-of-type(even) {
    *   { grid-column: 1 / -#{$IMG_WIDTH + 2}; }
    img { grid-column: span #{$IMG_WIDTH} / -1; }
  }
}

.call-to-action {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  gap: 1ch;
}

.masthead {
  @include window-width();
}

.projects, .jobs {
  display: flex;
  height: 100%;
  flex-direction: column;
  text-decoration: none;
  padding-bottom: $COLUMN_GAP;
  box-sizing: border-box;

  * {
    flex-grow: 0;
  }

  h2 {
    margin-top: 0;
    font-family: $HEADLINE;
    font-size: 42px;
    flex-grow: 1;
  }
}

.client {
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 2px;
  font-size: 1.3rem;
}

footer {
  @include expand-to-window();
  min-height: 20vh;
  padding-top: 3*$COLUMN_GAP;
  padding-bottom: 3*$COLUMN_GAP;
  margin-top: 3*$COLUMN_GAP;

  *, h2, h3 {
    color: white;
  }

  &::after {
    content: '';
    display: table;
    clear: both;
  }

  > * {
    float: left;
  }

  img {
    width: 200px;
    max-width: 75%;
  }

  nav {
    display: flex;
    float: right;

    @media screen and (max-width: 690px) {
      float: left;
      flex-direction: column;
    }

    h3 {
      margin-top: 0;
    }

    > * {
      width: 200px;
    }

    a {
      display: block;
      margin-bottom: 1em;
    }
  }
}

// What we do
#services {
  grid-template-columns: 100% !important;
  grid-row-gap: 3 * $COLUMN_GAP;
}

.services {
  h2 {
    font-size: 2rem;
  }

  time {
    display: none;
  }
}

.authors {
  img {
    border-radius: 50%;
  }

  time {
    display: none;
  }
}

// Reports
[data-collection='data-trusts'] {
  #menu :not(:first-child), #menu [href="#menu"] {
    display: none;
  }

  #toplink {
    position: absolute;
    font-weight: bold;
    right: calc(#{$RELATIVE_MARGIN_CALC});
    top: -$COLUMN_SIZE;
  }

  h2 {
    margin-top: 3em;
  }

  section {
    padding: 2*$COLUMN_GAP;
    grid-template-columns: 1fr 3fr;
    border-bottom: 5px solid transparent;

    h2 {
      font-family: $HEADLINE;
      margin: -2*$COLUMN_GAP -2*$COLUMN_GAP $COLUMN_GAP;
      padding: 2*$COLUMN_GAP;

      grid-column: span 2;
      font-size: 250%;
    }

    @mixin block-color($index, $color) {
      &:nth-of-type(4n+#{$index}) {
        border-color: $color;
        h2 { background: $color; }
      }
    }

    @include block-color(1, $ILLUS_ORANGE);
    @include block-color(2, $ILLUS_PURPLE);
    @include block-color(3, $ILLUS_BLUE);
    @include block-color(4, $ILLUS_RED);

    &:nth-of-type(even) h2 {
      color: white;
    }
  }
}

[itemprop='author'], time {
  font-weight: bold;
  font-size: 12pt;
  margin-right: 2.5ch;

  &::after {
    padding-left: 3ch;
    font-size: 60%;
    vertical-align: super;
  }
}

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@mixin font($family, $variant, $weight, $style) {
  @font-face {
      font-family: $family;
      font-weight: $weight;
      font-style: $style;
      src: {% for type in site.data.fonttypes -%}
        url('#{to-lower-case(str-replace($family, ' ', ''))}-#{to-lower-case($variant)}.{{ type.ext }}') format('{{ type.format }}'),
      {%- endfor %};
      font-display: swap;
  }
}

{% for font in site.data.fonts %}
{% if font.bold %}
@include font('{{ font.name }}', 'bold', 'bold', 'normal');
{% endif %}
{% if font.italic %}
@include font('{{ font.name }}', 'italic', 'normal', 'italic');
{% endif %}
@include font('{{ font.name }}', 'regular', 'normal', 'normal');
{% endfor %}